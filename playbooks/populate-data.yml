---
# Copyright 2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Environment Device Population
  hosts: all
  pre_tasks:
    - name: Building a variable map
      no_log: true
      set_fact:
        ansible_cruton_host_vars: >-
          {% set cruton_ansible_host_vars = {} %}
          {% set _ = cruton_ansible_host_vars.update({'vars': {}}) %}
          {% set var_set = cruton_ansible_host_vars['vars'] %}
          {% set _ = cruton_ansible_host_vars.update({'access_ip': {}}) %}
          {% set access_ip_set = cruton_ansible_host_vars['access_ip'] %}
          {% set _ = cruton_ansible_host_vars.update({'ports': {}}) %}
          {% set ports_set = cruton_ansible_host_vars['ports'] %}
          {% for k, v in hostvars[inventory_hostname].items() %}
          {%   if k.startswith('ansible') %}
          {%     if v is string %}
          {%       if 'ssh' not in k and 'password' not in k and 'key' not in k and 'token' not in k and 'credential' not in k %}
          {%         set _ = var_set.update({k.strip(): v.strip()}) %}
          {%       endif %}
          {%     elif v is mapping %}
          {%       if 'device' in v and 'pciid' in v %}
          {%         set _ = ports_set.update({v['device'].strip(): v['pciid'].strip()}) %}
          {%       endif %}
          {%       if 'device' in v and 'ipv4' in v %}
          {%         set _ = access_ip_set.update({v['device'].strip(): v['ipv4']['address'].strip()}) %}
          {%       endif %}
          {%     endif %}
          {%   else %}
          {%     if v is string %}
          {%       if 'ssh' not in k and 'password' not in k and 'key' not in k and 'token' not in k and 'credential' not in k %}
          {%         set _ = var_set.update({k.strip(): v | string}) %}
          {%       endif %}
          {%     elif v is mapping or v is iterable %}
          {%       set _ = var_set.update({k.strip(): v}) %}
          {%     else %}
          {%       set _ = var_set.update({k.strip(): v | string}) %}
          {%     endif %}
          {%   endif %}
          {% endfor %}
          {% set _ = cruton_ansible_host_vars.update({'name': ansible_hostname}) %}
          {% set _ = cruton_ansible_host_vars.update({'dev_id': ansible_hostname}) %}
          {{ cruton_ansible_host_vars }}

    - name: Running host variable cleanup
      no_log: true
      set_fact:
        cruton_host_vars: "[{{ ansible_cruton_host_vars.strip() }}]"

    - name: POST to the cruton API
      uri:
        url: "{{ api_endpoint }}/v1/entities/{{ api_entity }}/environments/{{ api_environment }}/devices"
        method: "POST"
        body: '{{ cruton_host_vars | to_json }}'
        body_format: "json"
        status_code: 201
  vars:
    api_endpoint: "http://127.0.0.1:5150"
    api_entity: "EntityOne"
    api_environment: "EnvironmentOne"

